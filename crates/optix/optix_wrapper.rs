/* automatically generated by rust-bindgen 0.58.1 */

#[repr(C)]
pub struct __BindgenUnionField<T>(::std::marker::PhantomData<T>);
impl<T> __BindgenUnionField<T> {
    #[inline]
    pub const fn new() -> Self {
        __BindgenUnionField(::std::marker::PhantomData)
    }
    #[inline]
    pub unsafe fn as_ref(&self) -> &T {
        ::std::mem::transmute(self)
    }
    #[inline]
    pub unsafe fn as_mut(&mut self) -> &mut T {
        ::std::mem::transmute(self)
    }
}
impl<T> ::std::default::Default for __BindgenUnionField<T> {
    #[inline]
    fn default() -> Self {
        Self::new()
    }
}
impl<T> ::std::clone::Clone for __BindgenUnionField<T> {
    #[inline]
    fn clone(&self) -> Self {
        Self::new()
    }
}
impl<T> ::std::marker::Copy for __BindgenUnionField<T> {}
impl<T> ::std::fmt::Debug for __BindgenUnionField<T> {
    fn fmt(&self, fmt: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        fmt.write_str("__BindgenUnionField")
    }
}
impl<T> ::std::hash::Hash for __BindgenUnionField<T> {
    fn hash<H: ::std::hash::Hasher>(&self, _state: &mut H) {}
}
impl<T> ::std::cmp::PartialEq for __BindgenUnionField<T> {
    fn eq(&self, _other: &__BindgenUnionField<T>) -> bool {
        true
    }
}
impl<T> ::std::cmp::Eq for __BindgenUnionField<T> {}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixDeviceContext_t {
    _unused: [u8; 0],
}
pub type OptixDeviceContext = *mut OptixDeviceContext_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixModule_t {
    _unused: [u8; 0],
}
pub type OptixModule = *mut OptixModule_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixProgramGroup_t {
    _unused: [u8; 0],
}
pub type OptixProgramGroup = *mut OptixProgramGroup_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixPipeline_t {
    _unused: [u8; 0],
}
pub type OptixPipeline = *mut OptixPipeline_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixDenoiser_t {
    _unused: [u8; 0],
}
pub type OptixDenoiser = *mut OptixDenoiser_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptixTask_t {
    _unused: [u8; 0],
}
pub type OptixTask = *mut OptixTask_t;
pub type OptixTraversableHandle = ::std::os::raw::c_ulonglong;
pub type OptixVisibilityMask = ::std::os::raw::c_uint;
impl OptixResult {
    pub const OPTIX_SUCCESS: OptixResult = OptixResult(0);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_VALUE: OptixResult = OptixResult(7001);
}
impl OptixResult {
    pub const OPTIX_ERROR_HOST_OUT_OF_MEMORY: OptixResult = OptixResult(7002);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_OPERATION: OptixResult = OptixResult(7003);
}
impl OptixResult {
    pub const OPTIX_ERROR_FILE_IO_ERROR: OptixResult = OptixResult(7004);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_FILE_FORMAT: OptixResult = OptixResult(7005);
}
impl OptixResult {
    pub const OPTIX_ERROR_DISK_CACHE_INVALID_PATH: OptixResult = OptixResult(7010);
}
impl OptixResult {
    pub const OPTIX_ERROR_DISK_CACHE_PERMISSION_ERROR: OptixResult = OptixResult(7011);
}
impl OptixResult {
    pub const OPTIX_ERROR_DISK_CACHE_DATABASE_ERROR: OptixResult = OptixResult(7012);
}
impl OptixResult {
    pub const OPTIX_ERROR_DISK_CACHE_INVALID_DATA: OptixResult = OptixResult(7013);
}
impl OptixResult {
    pub const OPTIX_ERROR_LAUNCH_FAILURE: OptixResult = OptixResult(7050);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_DEVICE_CONTEXT: OptixResult = OptixResult(7051);
}
impl OptixResult {
    pub const OPTIX_ERROR_CUDA_NOT_INITIALIZED: OptixResult = OptixResult(7052);
}
impl OptixResult {
    pub const OPTIX_ERROR_VALIDATION_FAILURE: OptixResult = OptixResult(7053);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_INPUT: OptixResult = OptixResult(7200);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_LAUNCH_PARAMETER: OptixResult = OptixResult(7201);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_PAYLOAD_ACCESS: OptixResult = OptixResult(7202);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_ATTRIBUTE_ACCESS: OptixResult = OptixResult(7203);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_FUNCTION_USE: OptixResult = OptixResult(7204);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_FUNCTION_ARGUMENTS: OptixResult = OptixResult(7205);
}
impl OptixResult {
    pub const OPTIX_ERROR_PIPELINE_OUT_OF_CONSTANT_MEMORY: OptixResult = OptixResult(7250);
}
impl OptixResult {
    pub const OPTIX_ERROR_PIPELINE_LINK_ERROR: OptixResult = OptixResult(7251);
}
impl OptixResult {
    pub const OPTIX_ERROR_ILLEGAL_DURING_TASK_EXECUTE: OptixResult = OptixResult(7270);
}
impl OptixResult {
    pub const OPTIX_ERROR_INTERNAL_COMPILER_ERROR: OptixResult = OptixResult(7299);
}
impl OptixResult {
    pub const OPTIX_ERROR_DENOISER_MODEL_NOT_SET: OptixResult = OptixResult(7300);
}
impl OptixResult {
    pub const OPTIX_ERROR_DENOISER_NOT_INITIALIZED: OptixResult = OptixResult(7301);
}
impl OptixResult {
    pub const OPTIX_ERROR_NOT_COMPATIBLE: OptixResult = OptixResult(7400);
}
impl OptixResult {
    pub const OPTIX_ERROR_PAYLOAD_TYPE_MISMATCH: OptixResult = OptixResult(7500);
}
impl OptixResult {
    pub const OPTIX_ERROR_PAYLOAD_TYPE_RESOLUTION_FAILED: OptixResult = OptixResult(7501);
}
impl OptixResult {
    pub const OPTIX_ERROR_PAYLOAD_TYPE_ID_INVALID: OptixResult = OptixResult(7502);
}
impl OptixResult {
    pub const OPTIX_ERROR_NOT_SUPPORTED: OptixResult = OptixResult(7800);
}
impl OptixResult {
    pub const OPTIX_ERROR_UNSUPPORTED_ABI_VERSION: OptixResult = OptixResult(7801);
}
impl OptixResult {
    pub const OPTIX_ERROR_FUNCTION_TABLE_SIZE_MISMATCH: OptixResult = OptixResult(7802);
}
impl OptixResult {
    pub const OPTIX_ERROR_INVALID_ENTRY_FUNCTION_OPTIONS: OptixResult = OptixResult(7803);
}
impl OptixResult {
    pub const OPTIX_ERROR_LIBRARY_NOT_FOUND: OptixResult = OptixResult(7804);
}
impl OptixResult {
    pub const OPTIX_ERROR_ENTRY_SYMBOL_NOT_FOUND: OptixResult = OptixResult(7805);
}
impl OptixResult {
    pub const OPTIX_ERROR_LIBRARY_UNLOAD_FAILURE: OptixResult = OptixResult(7806);
}
impl OptixResult {
    pub const OPTIX_ERROR_DEVICE_OUT_OF_MEMORY: OptixResult = OptixResult(7807);
}
impl OptixResult {
    pub const OPTIX_ERROR_CUDA_ERROR: OptixResult = OptixResult(7900);
}
impl OptixResult {
    pub const OPTIX_ERROR_INTERNAL_ERROR: OptixResult = OptixResult(7990);
}
impl OptixResult {
    pub const OPTIX_ERROR_UNKNOWN: OptixResult = OptixResult(7999);
}
#[repr(transparent)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub struct OptixResult(pub ::std::os::raw::c_int);
pub mod OptixDeviceProperty {
    pub type Type = ::std::os::raw::c_int;
    pub const OPTIX_DEVICE_PROPERTY_LIMIT_MAX_TRACE_DEPTH: Type = 8193;
    pub const OPTIX_DEVICE_PROPERTY_LIMIT_MAX_TRAVERSABLE_GRAPH_DEPTH: Type = 8194;
    pub const OPTIX_DEVICE_PROPERTY_LIMIT_MAX_PRIMITIVES_PER_GAS: Type = 8195;
    pub const OPTIX_DEVICE_PROPERTY_LIMIT_MAX_INSTANCES_PER_IAS: Type = 8196;
    pub const OPTIX_DEVICE_PROPERTY_RTCORE_VERSION: Type = 8197;
    pub const OPTIX_DEVICE_PROPERTY_LIMIT_MAX_INSTANCE_ID: Type = 8198;
    pub const OPTIX_DEVICE_PROPERTY_LIMIT_NUM_BITS_INSTANCE_VISIBILITY_MASK: Type = 8199;
    pub const OPTIX_DEVICE_PROPERTY_LIMIT_MAX_SBT_RECORDS_PER_GAS: Type = 8200;
    pub const OPTIX_DEVICE_PROPERTY_LIMIT_MAX_SBT_OFFSET: Type = 8201;
    pub const OPTIX_DEVICE_PROPERTY_SHADER_EXECUTION_REORDERING: Type = 8202;
}
pub type OptixLogCallback = ::std::option::Option<
    unsafe extern "C" fn(
        level: ::std::os::raw::c_uint,
        tag: *const ::std::os::raw::c_char,
        message: *const ::std::os::raw::c_char,
        cbdata: *mut ::std::os::raw::c_void,
    ),
>;
pub const OptixDeviceContextValidationMode_OPTIX_DEVICE_CONTEXT_VALIDATION_MODE_OFF:
    OptixDeviceContextValidationMode = 0;
pub const OptixDeviceContextValidationMode_OPTIX_DEVICE_CONTEXT_VALIDATION_MODE_ALL:
    OptixDeviceContextValidationMode = -1;
pub type OptixDeviceContextValidationMode = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixDeviceContextOptions {
    pub logCallbackFunction: OptixLogCallback,
    pub logCallbackData: *mut ::std::os::raw::c_void,
    pub logCallbackLevel: ::std::os::raw::c_int,
    pub validationMode: OptixDeviceContextValidationMode,
}
impl Default for OptixDeviceContextOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixDevicePropertyShaderExecutionReorderingFlags_OPTIX_DEVICE_PROPERTY_SHADER_EXECUTION_REORDERING_FLAG_NONE : OptixDevicePropertyShaderExecutionReorderingFlags = 0 ;
pub const OptixDevicePropertyShaderExecutionReorderingFlags_OPTIX_DEVICE_PROPERTY_SHADER_EXECUTION_REORDERING_FLAG_STANDARD : OptixDevicePropertyShaderExecutionReorderingFlags = 1 ;
pub type OptixDevicePropertyShaderExecutionReorderingFlags = ::std::os::raw::c_int;
pub const OptixHitKind_OPTIX_HIT_KIND_TRIANGLE_FRONT_FACE: OptixHitKind = 254;
pub const OptixHitKind_OPTIX_HIT_KIND_TRIANGLE_BACK_FACE: OptixHitKind = 255;
pub type OptixHitKind = ::std::os::raw::c_int;
pub const OptixIndicesFormat_OPTIX_INDICES_FORMAT_NONE: OptixIndicesFormat = 0;
pub const OptixIndicesFormat_OPTIX_INDICES_FORMAT_UNSIGNED_BYTE3: OptixIndicesFormat = 8449;
pub const OptixIndicesFormat_OPTIX_INDICES_FORMAT_UNSIGNED_SHORT3: OptixIndicesFormat = 8450;
pub const OptixIndicesFormat_OPTIX_INDICES_FORMAT_UNSIGNED_INT3: OptixIndicesFormat = 8451;
pub type OptixIndicesFormat = ::std::os::raw::c_int;
pub const OptixVertexFormat_OPTIX_VERTEX_FORMAT_NONE: OptixVertexFormat = 0;
pub const OptixVertexFormat_OPTIX_VERTEX_FORMAT_FLOAT3: OptixVertexFormat = 8481;
pub const OptixVertexFormat_OPTIX_VERTEX_FORMAT_FLOAT2: OptixVertexFormat = 8482;
pub const OptixVertexFormat_OPTIX_VERTEX_FORMAT_HALF3: OptixVertexFormat = 8483;
pub const OptixVertexFormat_OPTIX_VERTEX_FORMAT_HALF2: OptixVertexFormat = 8484;
pub const OptixVertexFormat_OPTIX_VERTEX_FORMAT_SNORM16_3: OptixVertexFormat = 8485;
pub const OptixVertexFormat_OPTIX_VERTEX_FORMAT_SNORM16_2: OptixVertexFormat = 8486;
pub type OptixVertexFormat = ::std::os::raw::c_int;
pub const OptixTransformFormat_OPTIX_TRANSFORM_FORMAT_NONE: OptixTransformFormat = 0;
pub const OptixTransformFormat_OPTIX_TRANSFORM_FORMAT_MATRIX_FLOAT12: OptixTransformFormat = 8673;
pub type OptixTransformFormat = ::std::os::raw::c_int;
pub const OptixDisplacementMicromapBiasAndScaleFormat_OPTIX_DISPLACEMENT_MICROMAP_BIAS_AND_SCALE_FORMAT_NONE : OptixDisplacementMicromapBiasAndScaleFormat = 0 ;
pub const OptixDisplacementMicromapBiasAndScaleFormat_OPTIX_DISPLACEMENT_MICROMAP_BIAS_AND_SCALE_FORMAT_FLOAT2 : OptixDisplacementMicromapBiasAndScaleFormat = 8769 ;
pub const OptixDisplacementMicromapBiasAndScaleFormat_OPTIX_DISPLACEMENT_MICROMAP_BIAS_AND_SCALE_FORMAT_HALF2 : OptixDisplacementMicromapBiasAndScaleFormat = 8770 ;
pub type OptixDisplacementMicromapBiasAndScaleFormat = ::std::os::raw::c_int;
pub const OptixDisplacementMicromapDirectionFormat_OPTIX_DISPLACEMENT_MICROMAP_DIRECTION_FORMAT_NONE : OptixDisplacementMicromapDirectionFormat = 0 ;
pub const OptixDisplacementMicromapDirectionFormat_OPTIX_DISPLACEMENT_MICROMAP_DIRECTION_FORMAT_FLOAT3 : OptixDisplacementMicromapDirectionFormat = 8801 ;
pub const OptixDisplacementMicromapDirectionFormat_OPTIX_DISPLACEMENT_MICROMAP_DIRECTION_FORMAT_HALF3 : OptixDisplacementMicromapDirectionFormat = 8802 ;
pub type OptixDisplacementMicromapDirectionFormat = ::std::os::raw::c_int;
pub const OptixOpacityMicromapFormat_OPTIX_OPACITY_MICROMAP_FORMAT_NONE:
    OptixOpacityMicromapFormat = 0;
pub const OptixOpacityMicromapFormat_OPTIX_OPACITY_MICROMAP_FORMAT_2_STATE:
    OptixOpacityMicromapFormat = 1;
pub const OptixOpacityMicromapFormat_OPTIX_OPACITY_MICROMAP_FORMAT_4_STATE:
    OptixOpacityMicromapFormat = 2;
pub type OptixOpacityMicromapFormat = ::std::os::raw::c_int;
pub const OptixOpacityMicromapArrayIndexingMode_OPTIX_OPACITY_MICROMAP_ARRAY_INDEXING_MODE_NONE:
    OptixOpacityMicromapArrayIndexingMode = 0;
pub const OptixOpacityMicromapArrayIndexingMode_OPTIX_OPACITY_MICROMAP_ARRAY_INDEXING_MODE_LINEAR : OptixOpacityMicromapArrayIndexingMode = 1 ;
pub const OptixOpacityMicromapArrayIndexingMode_OPTIX_OPACITY_MICROMAP_ARRAY_INDEXING_MODE_INDEXED : OptixOpacityMicromapArrayIndexingMode = 2 ;
pub type OptixOpacityMicromapArrayIndexingMode = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixOpacityMicromapUsageCount {
    pub count: ::std::os::raw::c_uint,
    pub subdivisionLevel: ::std::os::raw::c_uint,
    pub format: OptixOpacityMicromapFormat,
}
impl Default for OptixOpacityMicromapUsageCount {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixBuildInputOpacityMicromap {
    pub indexingMode: OptixOpacityMicromapArrayIndexingMode,
    pub opacityMicromapArray: CUdeviceptr,
    pub indexBuffer: CUdeviceptr,
    pub indexSizeInBytes: ::std::os::raw::c_uint,
    pub indexStrideInBytes: ::std::os::raw::c_uint,
    pub indexOffset: ::std::os::raw::c_uint,
    pub numMicromapUsageCounts: ::std::os::raw::c_uint,
    pub micromapUsageCounts: *const OptixOpacityMicromapUsageCount,
}
impl Default for OptixBuildInputOpacityMicromap {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixRelocateInputOpacityMicromap {
    pub opacityMicromapArray: CUdeviceptr,
}
impl Default for OptixRelocateInputOpacityMicromap {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixDisplacementMicromapFormat_OPTIX_DISPLACEMENT_MICROMAP_FORMAT_NONE:
    OptixDisplacementMicromapFormat = 0;
pub const OptixDisplacementMicromapFormat_OPTIX_DISPLACEMENT_MICROMAP_FORMAT_64_MICRO_TRIS_64_BYTES : OptixDisplacementMicromapFormat = 1 ;
pub const OptixDisplacementMicromapFormat_OPTIX_DISPLACEMENT_MICROMAP_FORMAT_256_MICRO_TRIS_128_BYTES : OptixDisplacementMicromapFormat = 2 ;
pub const OptixDisplacementMicromapFormat_OPTIX_DISPLACEMENT_MICROMAP_FORMAT_1024_MICRO_TRIS_128_BYTES : OptixDisplacementMicromapFormat = 3 ;
pub type OptixDisplacementMicromapFormat = ::std::os::raw::c_int;
pub const OptixDisplacementMicromapFlags_OPTIX_DISPLACEMENT_MICROMAP_FLAG_NONE:
    OptixDisplacementMicromapFlags = 0;
pub const OptixDisplacementMicromapFlags_OPTIX_DISPLACEMENT_MICROMAP_FLAG_PREFER_FAST_TRACE:
    OptixDisplacementMicromapFlags = 1;
pub const OptixDisplacementMicromapFlags_OPTIX_DISPLACEMENT_MICROMAP_FLAG_PREFER_FAST_BUILD:
    OptixDisplacementMicromapFlags = 2;
pub type OptixDisplacementMicromapFlags = ::std::os::raw::c_int;
pub const OptixDisplacementMicromapTriangleFlags_OPTIX_DISPLACEMENT_MICROMAP_TRIANGLE_FLAG_NONE:
    OptixDisplacementMicromapTriangleFlags = 0;
pub const OptixDisplacementMicromapTriangleFlags_OPTIX_DISPLACEMENT_MICROMAP_TRIANGLE_FLAG_DECIMATE_EDGE_01 : OptixDisplacementMicromapTriangleFlags = 1 ;
pub const OptixDisplacementMicromapTriangleFlags_OPTIX_DISPLACEMENT_MICROMAP_TRIANGLE_FLAG_DECIMATE_EDGE_12 : OptixDisplacementMicromapTriangleFlags = 2 ;
pub const OptixDisplacementMicromapTriangleFlags_OPTIX_DISPLACEMENT_MICROMAP_TRIANGLE_FLAG_DECIMATE_EDGE_20 : OptixDisplacementMicromapTriangleFlags = 4 ;
pub type OptixDisplacementMicromapTriangleFlags = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixDisplacementMicromapDesc {
    pub byteOffset: ::std::os::raw::c_uint,
    pub subdivisionLevel: ::std::os::raw::c_ushort,
    pub format: ::std::os::raw::c_ushort,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixDisplacementMicromapHistogramEntry {
    pub count: ::std::os::raw::c_uint,
    pub subdivisionLevel: ::std::os::raw::c_uint,
    pub format: OptixDisplacementMicromapFormat,
}
impl Default for OptixDisplacementMicromapHistogramEntry {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixDisplacementMicromapArrayBuildInput {
    pub flags: OptixDisplacementMicromapFlags,
    pub displacementValuesBuffer: CUdeviceptr,
    pub perDisplacementMicromapDescBuffer: CUdeviceptr,
    pub perDisplacementMicromapDescStrideInBytes: ::std::os::raw::c_uint,
    pub numDisplacementMicromapHistogramEntries: ::std::os::raw::c_uint,
    pub displacementMicromapHistogramEntries: *const OptixDisplacementMicromapHistogramEntry,
}
impl Default for OptixDisplacementMicromapArrayBuildInput {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixDisplacementMicromapUsageCount {
    pub count: ::std::os::raw::c_uint,
    pub subdivisionLevel: ::std::os::raw::c_uint,
    pub format: OptixDisplacementMicromapFormat,
}
impl Default for OptixDisplacementMicromapUsageCount {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixDisplacementMicromapArrayIndexingMode_OPTIX_DISPLACEMENT_MICROMAP_ARRAY_INDEXING_MODE_NONE : OptixDisplacementMicromapArrayIndexingMode = 0 ;
pub const OptixDisplacementMicromapArrayIndexingMode_OPTIX_DISPLACEMENT_MICROMAP_ARRAY_INDEXING_MODE_LINEAR : OptixDisplacementMicromapArrayIndexingMode = 1 ;
pub const OptixDisplacementMicromapArrayIndexingMode_OPTIX_DISPLACEMENT_MICROMAP_ARRAY_INDEXING_MODE_INDEXED : OptixDisplacementMicromapArrayIndexingMode = 2 ;
pub type OptixDisplacementMicromapArrayIndexingMode = ::std::os::raw::c_int;
#[repr(C)]
pub struct OptixBuildInputDisplacementMicromap {
    pub indexingMode: OptixDisplacementMicromapArrayIndexingMode,
    pub displacementMicromapArray: CUdeviceptr,
    pub displacementMicromapIndexBuffer: CUdeviceptr,
    pub vertexDirectionsBuffer: CUdeviceptr,
    pub vertexBiasAndScaleBuffer: CUdeviceptr,
    pub triangleFlagsBuffer: CUdeviceptr,
    pub displacementMicromapIndexOffset: ::std::os::raw::c_uint,
    pub displacementMicromapIndexStrideInBytes: ::std::os::raw::c_uint,
    pub displacementMicromapIndexSizeInBytes: ::std::os::raw::c_uint,
    pub vertexDirectionFormat: OptixDisplacementMicromapDirectionFormat,
    pub vertexDirectionStrideInBytes: ::std::os::raw::c_uint,
    pub vertexBiasAndScaleFormat: OptixDisplacementMicromapBiasAndScaleFormat,
    pub vertexBiasAndScaleStrideInBytes: ::std::os::raw::c_uint,
    pub triangleFlagsStrideInBytes: ::std::os::raw::c_uint,
    pub numDisplacementMicromapUsageCounts: ::std::os::raw::c_uint,
    pub displacementMicromapUsageCounts: *const OptixDisplacementMicromapUsageCount,
}
impl Default for OptixBuildInputDisplacementMicromap {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixBuildInputTriangleArray {
    pub vertexBuffers: *const CUdeviceptr,
    pub numVertices: ::std::os::raw::c_uint,
    pub vertexFormat: OptixVertexFormat,
    pub vertexStrideInBytes: ::std::os::raw::c_uint,
    pub indexBuffer: CUdeviceptr,
    pub numIndexTriplets: ::std::os::raw::c_uint,
    pub indexFormat: OptixIndicesFormat,
    pub indexStrideInBytes: ::std::os::raw::c_uint,
    pub preTransform: CUdeviceptr,
    pub flags: *const ::std::os::raw::c_uint,
    pub numSbtRecords: ::std::os::raw::c_uint,
    pub sbtIndexOffsetBuffer: CUdeviceptr,
    pub sbtIndexOffsetSizeInBytes: ::std::os::raw::c_uint,
    pub sbtIndexOffsetStrideInBytes: ::std::os::raw::c_uint,
    pub primitiveIndexOffset: ::std::os::raw::c_uint,
    pub transformFormat: OptixTransformFormat,
    pub opacityMicromap: OptixBuildInputOpacityMicromap,
    pub displacementMicromap: OptixBuildInputDisplacementMicromap,
}
impl Default for OptixBuildInputTriangleArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixRelocateInputTriangleArray {
    pub numSbtRecords: ::std::os::raw::c_uint,
    pub opacityMicromap: OptixRelocateInputOpacityMicromap,
}
impl Default for OptixRelocateInputTriangleArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_CUSTOM: OptixPrimitiveType = 9472;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_ROUND_QUADRATIC_BSPLINE: OptixPrimitiveType =
    9473;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_ROUND_CUBIC_BSPLINE: OptixPrimitiveType = 9474;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_ROUND_LINEAR: OptixPrimitiveType = 9475;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_ROUND_CATMULLROM: OptixPrimitiveType = 9476;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_FLAT_QUADRATIC_BSPLINE: OptixPrimitiveType = 9477;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_SPHERE: OptixPrimitiveType = 9478;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_ROUND_CUBIC_BEZIER: OptixPrimitiveType = 9479;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_TRIANGLE: OptixPrimitiveType = 9521;
pub const OptixPrimitiveType_OPTIX_PRIMITIVE_TYPE_DISPLACED_MICROMESH_TRIANGLE: OptixPrimitiveType =
    9522;
pub type OptixPrimitiveType = ::std::os::raw::c_int;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_CUSTOM: OptixPrimitiveTypeFlags = 1;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_ROUND_QUADRATIC_BSPLINE:
    OptixPrimitiveTypeFlags = 2;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_ROUND_CUBIC_BSPLINE:
    OptixPrimitiveTypeFlags = 4;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_ROUND_LINEAR: OptixPrimitiveTypeFlags =
    8;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_ROUND_CATMULLROM:
    OptixPrimitiveTypeFlags = 16;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_FLAT_QUADRATIC_BSPLINE:
    OptixPrimitiveTypeFlags = 32;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_SPHERE: OptixPrimitiveTypeFlags = 64;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_ROUND_CUBIC_BEZIER:
    OptixPrimitiveTypeFlags = 128;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_TRIANGLE: OptixPrimitiveTypeFlags =
    -2147483648;
pub const OptixPrimitiveTypeFlags_OPTIX_PRIMITIVE_TYPE_FLAGS_DISPLACED_MICROMESH_TRIANGLE:
    OptixPrimitiveTypeFlags = 1073741824;
pub type OptixPrimitiveTypeFlags = ::std::os::raw::c_int;
pub const OptixCurveEndcapFlags_OPTIX_CURVE_ENDCAP_DEFAULT: OptixCurveEndcapFlags = 0;
pub const OptixCurveEndcapFlags_OPTIX_CURVE_ENDCAP_ON: OptixCurveEndcapFlags = 1;
pub type OptixCurveEndcapFlags = ::std::os::raw::c_int;
#[repr(C)]
pub struct OptixBuildInputCurveArray {
    pub curveType: OptixPrimitiveType,
    pub numPrimitives: ::std::os::raw::c_uint,
    pub vertexBuffers: *const CUdeviceptr,
    pub numVertices: ::std::os::raw::c_uint,
    pub vertexStrideInBytes: ::std::os::raw::c_uint,
    pub widthBuffers: *const CUdeviceptr,
    pub widthStrideInBytes: ::std::os::raw::c_uint,
    pub normalBuffers: *const CUdeviceptr,
    pub normalStrideInBytes: ::std::os::raw::c_uint,
    pub indexBuffer: CUdeviceptr,
    pub indexStrideInBytes: ::std::os::raw::c_uint,
    pub flag: ::std::os::raw::c_uint,
    pub primitiveIndexOffset: ::std::os::raw::c_uint,
    pub endcapFlags: ::std::os::raw::c_uint,
}
impl Default for OptixBuildInputCurveArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixBuildInputSphereArray {
    pub vertexBuffers: *const CUdeviceptr,
    pub vertexStrideInBytes: ::std::os::raw::c_uint,
    pub numVertices: ::std::os::raw::c_uint,
    pub radiusBuffers: *const CUdeviceptr,
    pub radiusStrideInBytes: ::std::os::raw::c_uint,
    pub singleRadius: ::std::os::raw::c_int,
    pub flags: *const ::std::os::raw::c_uint,
    pub numSbtRecords: ::std::os::raw::c_uint,
    pub sbtIndexOffsetBuffer: CUdeviceptr,
    pub sbtIndexOffsetSizeInBytes: ::std::os::raw::c_uint,
    pub sbtIndexOffsetStrideInBytes: ::std::os::raw::c_uint,
    pub primitiveIndexOffset: ::std::os::raw::c_uint,
}
impl Default for OptixBuildInputSphereArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixAabb {
    pub minX: f32,
    pub minY: f32,
    pub minZ: f32,
    pub maxX: f32,
    pub maxY: f32,
    pub maxZ: f32,
}
#[repr(C)]
pub struct OptixBuildInputCustomPrimitiveArray {
    pub aabbBuffers: *const CUdeviceptr,
    pub numPrimitives: ::std::os::raw::c_uint,
    pub strideInBytes: ::std::os::raw::c_uint,
    pub flags: *const ::std::os::raw::c_uint,
    pub numSbtRecords: ::std::os::raw::c_uint,
    pub sbtIndexOffsetBuffer: CUdeviceptr,
    pub sbtIndexOffsetSizeInBytes: ::std::os::raw::c_uint,
    pub sbtIndexOffsetStrideInBytes: ::std::os::raw::c_uint,
    pub primitiveIndexOffset: ::std::os::raw::c_uint,
}
impl Default for OptixBuildInputCustomPrimitiveArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixBuildInputInstanceArray {
    pub instances: CUdeviceptr,
    pub numInstances: ::std::os::raw::c_uint,
    pub instanceStride: ::std::os::raw::c_uint,
}
impl Default for OptixBuildInputInstanceArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixRelocateInputInstanceArray {
    pub numInstances: ::std::os::raw::c_uint,
    pub traversableHandles: CUdeviceptr,
}
impl Default for OptixRelocateInputInstanceArray {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixBuildInputType_OPTIX_BUILD_INPUT_TYPE_TRIANGLES: OptixBuildInputType = 8513;
pub const OptixBuildInputType_OPTIX_BUILD_INPUT_TYPE_CUSTOM_PRIMITIVES: OptixBuildInputType = 8514;
pub const OptixBuildInputType_OPTIX_BUILD_INPUT_TYPE_INSTANCES: OptixBuildInputType = 8515;
pub const OptixBuildInputType_OPTIX_BUILD_INPUT_TYPE_INSTANCE_POINTERS: OptixBuildInputType = 8516;
pub const OptixBuildInputType_OPTIX_BUILD_INPUT_TYPE_CURVES: OptixBuildInputType = 8517;
pub const OptixBuildInputType_OPTIX_BUILD_INPUT_TYPE_SPHERES: OptixBuildInputType = 8518;
pub type OptixBuildInputType = ::std::os::raw::c_int;
#[repr(C)]
pub struct OptixBuildInput__bindgen_ty_1 {
    pub triangleArray: __BindgenUnionField<OptixBuildInputTriangleArray>,
    pub curveArray: __BindgenUnionField<OptixBuildInputCurveArray>,
    pub sphereArray: __BindgenUnionField<OptixBuildInputSphereArray>,
    pub customPrimitiveArray: __BindgenUnionField<OptixBuildInputCustomPrimitiveArray>,
    pub instanceArray: __BindgenUnionField<OptixBuildInputInstanceArray>,
    pub pad: __BindgenUnionField<[::std::os::raw::c_char; 1024usize]>,
    pub bindgen_union_field: [u64; 128usize],
}
impl Default for OptixBuildInput__bindgen_ty_1 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixRelocateInput {
    pub type_: OptixBuildInputType,
    pub __bindgen_anon_1: OptixRelocateInput__bindgen_ty_1,
}
#[repr(C)]
pub struct OptixRelocateInput__bindgen_ty_1 {
    pub instanceArray: __BindgenUnionField<OptixRelocateInputInstanceArray>,
    pub triangleArray: __BindgenUnionField<OptixRelocateInputTriangleArray>,
    pub bindgen_union_field: [u64; 2usize],
}
impl Default for OptixRelocateInput__bindgen_ty_1 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
impl Default for OptixRelocateInput {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixInstanceFlags_OPTIX_INSTANCE_FLAG_NONE: OptixInstanceFlags = 0;
pub const OptixInstanceFlags_OPTIX_INSTANCE_FLAG_DISABLE_TRIANGLE_FACE_CULLING: OptixInstanceFlags =
    1;
pub const OptixInstanceFlags_OPTIX_INSTANCE_FLAG_FLIP_TRIANGLE_FACING: OptixInstanceFlags = 2;
pub const OptixInstanceFlags_OPTIX_INSTANCE_FLAG_DISABLE_ANYHIT: OptixInstanceFlags = 4;
pub const OptixInstanceFlags_OPTIX_INSTANCE_FLAG_ENFORCE_ANYHIT: OptixInstanceFlags = 8;
pub const OptixInstanceFlags_OPTIX_INSTANCE_FLAG_FORCE_OPACITY_MICROMAP_2_STATE:
    OptixInstanceFlags = 16;
pub const OptixInstanceFlags_OPTIX_INSTANCE_FLAG_DISABLE_OPACITY_MICROMAPS: OptixInstanceFlags = 32;
pub type OptixInstanceFlags = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixInstance {
    pub transform: [f32; 12usize],
    pub instanceId: ::std::os::raw::c_uint,
    pub sbtOffset: ::std::os::raw::c_uint,
    pub visibilityMask: ::std::os::raw::c_uint,
    pub flags: ::std::os::raw::c_uint,
    pub traversableHandle: OptixTraversableHandle,
    pub pad: [::std::os::raw::c_uint; 2usize],
}
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_NONE: OptixBuildFlags = 0;
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_ALLOW_UPDATE: OptixBuildFlags = 1;
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_ALLOW_COMPACTION: OptixBuildFlags = 2;
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_PREFER_FAST_TRACE: OptixBuildFlags = 4;
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_PREFER_FAST_BUILD: OptixBuildFlags = 8;
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_ALLOW_RANDOM_VERTEX_ACCESS: OptixBuildFlags = 16;
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_ALLOW_RANDOM_INSTANCE_ACCESS: OptixBuildFlags = 32;
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_ALLOW_OPACITY_MICROMAP_UPDATE: OptixBuildFlags = 64;
pub const OptixBuildFlags_OPTIX_BUILD_FLAG_ALLOW_DISABLE_OPACITY_MICROMAPS: OptixBuildFlags = 128;
pub type OptixBuildFlags = ::std::os::raw::c_int;
pub const OptixOpacityMicromapFlags_OPTIX_OPACITY_MICROMAP_FLAG_NONE: OptixOpacityMicromapFlags = 0;
pub const OptixOpacityMicromapFlags_OPTIX_OPACITY_MICROMAP_FLAG_PREFER_FAST_TRACE:
    OptixOpacityMicromapFlags = 1;
pub const OptixOpacityMicromapFlags_OPTIX_OPACITY_MICROMAP_FLAG_PREFER_FAST_BUILD:
    OptixOpacityMicromapFlags = 2;
pub type OptixOpacityMicromapFlags = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixOpacityMicromapDesc {
    pub byteOffset: ::std::os::raw::c_uint,
    pub subdivisionLevel: ::std::os::raw::c_ushort,
    pub format: ::std::os::raw::c_ushort,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixOpacityMicromapHistogramEntry {
    pub count: ::std::os::raw::c_uint,
    pub subdivisionLevel: ::std::os::raw::c_uint,
    pub format: OptixOpacityMicromapFormat,
}
impl Default for OptixOpacityMicromapHistogramEntry {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixOpacityMicromapArrayBuildInput {
    pub flags: ::std::os::raw::c_uint,
    pub inputBuffer: CUdeviceptr,
    pub perMicromapDescBuffer: CUdeviceptr,
    pub perMicromapDescStrideInBytes: ::std::os::raw::c_uint,
    pub numMicromapHistogramEntries: ::std::os::raw::c_uint,
    pub micromapHistogramEntries: *const OptixOpacityMicromapHistogramEntry,
}
impl Default for OptixOpacityMicromapArrayBuildInput {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixMicromapBufferSizes {
    pub outputSizeInBytes: size_t,
    pub tempSizeInBytes: size_t,
}
impl Default for OptixMicromapBufferSizes {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixMicromapBuffers {
    pub output: CUdeviceptr,
    pub outputSizeInBytes: size_t,
    pub temp: CUdeviceptr,
    pub tempSizeInBytes: size_t,
}
impl Default for OptixMicromapBuffers {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixBuildOperation_OPTIX_BUILD_OPERATION_BUILD: OptixBuildOperation = 8545;
pub const OptixBuildOperation_OPTIX_BUILD_OPERATION_UPDATE: OptixBuildOperation = 8546;
pub type OptixBuildOperation = ::std::os::raw::c_int;
pub const OptixMotionFlags_OPTIX_MOTION_FLAG_NONE: OptixMotionFlags = 0;
pub const OptixMotionFlags_OPTIX_MOTION_FLAG_START_VANISH: OptixMotionFlags = 1;
pub const OptixMotionFlags_OPTIX_MOTION_FLAG_END_VANISH: OptixMotionFlags = 2;
pub type OptixMotionFlags = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixMotionOptions {
    pub numKeys: ::std::os::raw::c_ushort,
    pub flags: ::std::os::raw::c_ushort,
    pub timeBegin: f32,
    pub timeEnd: f32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixAccelBuildOptions {
    pub buildFlags: ::std::os::raw::c_uint,
    pub operation: OptixBuildOperation,
    pub motionOptions: OptixMotionOptions,
}
impl Default for OptixAccelBuildOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixAccelBufferSizes {
    pub outputSizeInBytes: size_t,
    pub tempSizeInBytes: size_t,
    pub tempUpdateSizeInBytes: size_t,
}
impl Default for OptixAccelBufferSizes {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixAccelPropertyType_OPTIX_PROPERTY_TYPE_COMPACTED_SIZE: OptixAccelPropertyType = 8577;
pub const OptixAccelPropertyType_OPTIX_PROPERTY_TYPE_AABBS: OptixAccelPropertyType = 8578;
pub type OptixAccelPropertyType = ::std::os::raw::c_int;
#[repr(C)]
pub struct OptixAccelEmitDesc {
    pub result: CUdeviceptr,
    pub type_: OptixAccelPropertyType,
}
impl Default for OptixAccelEmitDesc {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixRelocationInfo {
    pub info: [::std::os::raw::c_ulonglong; 4usize],
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixStaticTransform {
    pub child: OptixTraversableHandle,
    pub pad: [::std::os::raw::c_uint; 2usize],
    pub transform: [f32; 12usize],
    pub invTransform: [f32; 12usize],
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixMatrixMotionTransform {
    pub child: OptixTraversableHandle,
    pub motionOptions: OptixMotionOptions,
    pub pad: [::std::os::raw::c_uint; 3usize],
    pub transform: [[f32; 12usize]; 2usize],
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixSRTData {
    pub sx: f32,
    pub a: f32,
    pub b: f32,
    pub pvx: f32,
    pub sy: f32,
    pub c: f32,
    pub pvy: f32,
    pub sz: f32,
    pub pvz: f32,
    pub qx: f32,
    pub qy: f32,
    pub qz: f32,
    pub qw: f32,
    pub tx: f32,
    pub ty: f32,
    pub tz: f32,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixSRTMotionTransform {
    pub child: OptixTraversableHandle,
    pub motionOptions: OptixMotionOptions,
    pub pad: [::std::os::raw::c_uint; 3usize],
    pub srtData: [OptixSRTData; 2usize],
}
pub const OptixTraversableType_OPTIX_TRAVERSABLE_TYPE_STATIC_TRANSFORM: OptixTraversableType = 8641;
pub const OptixTraversableType_OPTIX_TRAVERSABLE_TYPE_MATRIX_MOTION_TRANSFORM:
    OptixTraversableType = 8642;
pub const OptixTraversableType_OPTIX_TRAVERSABLE_TYPE_SRT_MOTION_TRANSFORM: OptixTraversableType =
    8643;
pub type OptixTraversableType = ::std::os::raw::c_int;
pub mod OptixPixelFormat {
    pub type Type = ::std::os::raw::c_int;
    pub const OPTIX_PIXEL_FORMAT_HALF1: Type = 8714;
    pub const OPTIX_PIXEL_FORMAT_HALF2: Type = 8711;
    pub const OPTIX_PIXEL_FORMAT_HALF3: Type = 8705;
    pub const OPTIX_PIXEL_FORMAT_HALF4: Type = 8706;
    pub const OPTIX_PIXEL_FORMAT_FLOAT1: Type = 8715;
    pub const OPTIX_PIXEL_FORMAT_FLOAT2: Type = 8712;
    pub const OPTIX_PIXEL_FORMAT_FLOAT3: Type = 8707;
    pub const OPTIX_PIXEL_FORMAT_FLOAT4: Type = 8708;
    pub const OPTIX_PIXEL_FORMAT_UCHAR3: Type = 8709;
    pub const OPTIX_PIXEL_FORMAT_UCHAR4: Type = 8710;
    pub const OPTIX_PIXEL_FORMAT_INTERNAL_GUIDE_LAYER: Type = 8713;
}
#[repr(C)]
pub struct OptixImage2D {
    pub data: CUdeviceptr,
    pub width: ::std::os::raw::c_uint,
    pub height: ::std::os::raw::c_uint,
    pub rowStrideInBytes: ::std::os::raw::c_uint,
    pub pixelStrideInBytes: ::std::os::raw::c_uint,
    pub format: OptixPixelFormat::Type,
}
impl Default for OptixImage2D {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub mod OptixDenoiserModelKind {
    pub type Type = ::std::os::raw::c_int;
    pub const OPTIX_DENOISER_MODEL_KIND_LDR: Type = 8994;
    pub const OPTIX_DENOISER_MODEL_KIND_HDR: Type = 8995;
    pub const OPTIX_DENOISER_MODEL_KIND_AOV: Type = 8996;
    pub const OPTIX_DENOISER_MODEL_KIND_TEMPORAL: Type = 8997;
    pub const OPTIX_DENOISER_MODEL_KIND_TEMPORAL_AOV: Type = 8998;
    pub const OPTIX_DENOISER_MODEL_KIND_UPSCALE2X: Type = 8999;
    pub const OPTIX_DENOISER_MODEL_KIND_TEMPORAL_UPSCALE2X: Type = 9000;
}
pub const OptixDenoiserAlphaMode_OPTIX_DENOISER_ALPHA_MODE_COPY: OptixDenoiserAlphaMode = 0;
pub const OptixDenoiserAlphaMode_OPTIX_DENOISER_ALPHA_MODE_DENOISE: OptixDenoiserAlphaMode = 1;
pub type OptixDenoiserAlphaMode = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixDenoiserOptions {
    pub guideAlbedo: ::std::os::raw::c_uint,
    pub guideNormal: ::std::os::raw::c_uint,
    pub denoiseAlpha: OptixDenoiserAlphaMode,
}
impl Default for OptixDenoiserOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixDenoiserGuideLayer {
    pub albedo: OptixImage2D,
    pub normal: OptixImage2D,
    pub flow: OptixImage2D,
    pub previousOutputInternalGuideLayer: OptixImage2D,
    pub outputInternalGuideLayer: OptixImage2D,
    pub flowTrustworthiness: OptixImage2D,
}
impl Default for OptixDenoiserGuideLayer {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixDenoiserAOVType_OPTIX_DENOISER_AOV_TYPE_NONE: OptixDenoiserAOVType = 0;
pub const OptixDenoiserAOVType_OPTIX_DENOISER_AOV_TYPE_BEAUTY: OptixDenoiserAOVType = 28672;
pub const OptixDenoiserAOVType_OPTIX_DENOISER_AOV_TYPE_SPECULAR: OptixDenoiserAOVType = 28673;
pub const OptixDenoiserAOVType_OPTIX_DENOISER_AOV_TYPE_REFLECTION: OptixDenoiserAOVType = 28674;
pub const OptixDenoiserAOVType_OPTIX_DENOISER_AOV_TYPE_REFRACTION: OptixDenoiserAOVType = 28675;
pub const OptixDenoiserAOVType_OPTIX_DENOISER_AOV_TYPE_DIFFUSE: OptixDenoiserAOVType = 28676;
pub type OptixDenoiserAOVType = ::std::os::raw::c_int;
#[repr(C)]
pub struct OptixDenoiserLayer {
    pub input: OptixImage2D,
    pub previousOutput: OptixImage2D,
    pub output: OptixImage2D,
    pub type_: OptixDenoiserAOVType,
}
impl Default for OptixDenoiserLayer {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixDenoiserParams {
    pub hdrIntensity: CUdeviceptr,
    pub blendFactor: f32,
    pub hdrAverageColor: CUdeviceptr,
    pub temporalModeUsePreviousLayers: ::std::os::raw::c_uint,
}
impl Default for OptixDenoiserParams {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
pub struct OptixDenoiserSizes {
    pub stateSizeInBytes: size_t,
    pub withOverlapScratchSizeInBytes: size_t,
    pub withoutOverlapScratchSizeInBytes: size_t,
    pub overlapWindowSizeInPixels: ::std::os::raw::c_uint,
    pub computeAverageColorSizeInBytes: size_t,
    pub computeIntensitySizeInBytes: size_t,
    pub internalGuideLayerPixelSizeInBytes: size_t,
}
impl Default for OptixDenoiserSizes {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixRayFlags_OPTIX_RAY_FLAG_NONE: OptixRayFlags = 0;
pub const OptixRayFlags_OPTIX_RAY_FLAG_DISABLE_ANYHIT: OptixRayFlags = 1;
pub const OptixRayFlags_OPTIX_RAY_FLAG_ENFORCE_ANYHIT: OptixRayFlags = 2;
pub const OptixRayFlags_OPTIX_RAY_FLAG_TERMINATE_ON_FIRST_HIT: OptixRayFlags = 4;
pub const OptixRayFlags_OPTIX_RAY_FLAG_DISABLE_CLOSESTHIT: OptixRayFlags = 8;
pub const OptixRayFlags_OPTIX_RAY_FLAG_CULL_BACK_FACING_TRIANGLES: OptixRayFlags = 16;
pub const OptixRayFlags_OPTIX_RAY_FLAG_CULL_FRONT_FACING_TRIANGLES: OptixRayFlags = 32;
pub const OptixRayFlags_OPTIX_RAY_FLAG_CULL_DISABLED_ANYHIT: OptixRayFlags = 64;
pub const OptixRayFlags_OPTIX_RAY_FLAG_CULL_ENFORCED_ANYHIT: OptixRayFlags = 128;
pub const OptixRayFlags_OPTIX_RAY_FLAG_FORCE_OPACITY_MICROMAP_2_STATE: OptixRayFlags = 1024;
pub type OptixRayFlags = ::std::os::raw::c_int;
pub const OptixTransformType_OPTIX_TRANSFORM_TYPE_NONE: OptixTransformType = 0;
pub const OptixTransformType_OPTIX_TRANSFORM_TYPE_STATIC_TRANSFORM: OptixTransformType = 1;
pub const OptixTransformType_OPTIX_TRANSFORM_TYPE_MATRIX_MOTION_TRANSFORM: OptixTransformType = 2;
pub const OptixTransformType_OPTIX_TRANSFORM_TYPE_SRT_MOTION_TRANSFORM: OptixTransformType = 3;
pub const OptixTransformType_OPTIX_TRANSFORM_TYPE_INSTANCE: OptixTransformType = 4;
pub type OptixTransformType = ::std::os::raw::c_int;
pub mod OptixTraversableGraphFlags {
    pub type Type = ::std::os::raw::c_int;
    pub const OPTIX_TRAVERSABLE_GRAPH_FLAG_ALLOW_ANY: Type = 0;
    pub const OPTIX_TRAVERSABLE_GRAPH_FLAG_ALLOW_SINGLE_GAS: Type = 1;
    pub const OPTIX_TRAVERSABLE_GRAPH_FLAG_ALLOW_SINGLE_LEVEL_INSTANCING: Type = 2;
}
pub mod OptixCompileOptimizationLevel {
    pub type Type = ::std::os::raw::c_int;
    pub const OPTIX_COMPILE_OPTIMIZATION_DEFAULT: Type = 0;
    pub const OPTIX_COMPILE_OPTIMIZATION_LEVEL_0: Type = 9024;
    pub const OPTIX_COMPILE_OPTIMIZATION_LEVEL_1: Type = 9025;
    pub const OPTIX_COMPILE_OPTIMIZATION_LEVEL_2: Type = 9026;
    pub const OPTIX_COMPILE_OPTIMIZATION_LEVEL_3: Type = 9027;
}
pub mod OptixCompileDebugLevel {
    pub type Type = ::std::os::raw::c_int;
    pub const OPTIX_COMPILE_DEBUG_LEVEL_DEFAULT: Type = 0;
    pub const OPTIX_COMPILE_DEBUG_LEVEL_NONE: Type = 9040;
    pub const OPTIX_COMPILE_DEBUG_LEVEL_MINIMAL: Type = 9041;
    pub const OPTIX_COMPILE_DEBUG_LEVEL_MODERATE: Type = 9043;
    pub const OPTIX_COMPILE_DEBUG_LEVEL_FULL: Type = 9042;
}
pub const OptixModuleCompileState_OPTIX_MODULE_COMPILE_STATE_NOT_STARTED: OptixModuleCompileState =
    9056;
pub const OptixModuleCompileState_OPTIX_MODULE_COMPILE_STATE_STARTED: OptixModuleCompileState =
    9057;
pub const OptixModuleCompileState_OPTIX_MODULE_COMPILE_STATE_IMPENDING_FAILURE:
    OptixModuleCompileState = 9058;
pub const OptixModuleCompileState_OPTIX_MODULE_COMPILE_STATE_FAILED: OptixModuleCompileState = 9059;
pub const OptixModuleCompileState_OPTIX_MODULE_COMPILE_STATE_COMPLETED: OptixModuleCompileState =
    9060;
pub type OptixModuleCompileState = ::std::os::raw::c_int;
#[repr(C)]
pub struct OptixModuleCompileBoundValueEntry {
    pub pipelineParamOffsetInBytes: size_t,
    pub sizeInBytes: size_t,
    pub boundValuePtr: *const ::std::os::raw::c_void,
    pub annotation: *const ::std::os::raw::c_char,
}
impl Default for OptixModuleCompileBoundValueEntry {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_DEFAULT: OptixPayloadTypeID = 0;
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_ID_0: OptixPayloadTypeID = 1;
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_ID_1: OptixPayloadTypeID = 2;
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_ID_2: OptixPayloadTypeID = 4;
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_ID_3: OptixPayloadTypeID = 8;
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_ID_4: OptixPayloadTypeID = 16;
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_ID_5: OptixPayloadTypeID = 32;
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_ID_6: OptixPayloadTypeID = 64;
pub const OptixPayloadTypeID_OPTIX_PAYLOAD_TYPE_ID_7: OptixPayloadTypeID = 128;
pub type OptixPayloadTypeID = ::std::os::raw::c_int;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_TRACE_CALLER_NONE: OptixPayloadSemantics =
    0;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_TRACE_CALLER_READ: OptixPayloadSemantics =
    1;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_TRACE_CALLER_WRITE: OptixPayloadSemantics =
    2;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_TRACE_CALLER_READ_WRITE:
    OptixPayloadSemantics = 3;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_CH_NONE: OptixPayloadSemantics = 0;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_CH_READ: OptixPayloadSemantics = 4;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_CH_WRITE: OptixPayloadSemantics = 8;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_CH_READ_WRITE: OptixPayloadSemantics = 12;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_MS_NONE: OptixPayloadSemantics = 0;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_MS_READ: OptixPayloadSemantics = 16;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_MS_WRITE: OptixPayloadSemantics = 32;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_MS_READ_WRITE: OptixPayloadSemantics = 48;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_AH_NONE: OptixPayloadSemantics = 0;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_AH_READ: OptixPayloadSemantics = 64;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_AH_WRITE: OptixPayloadSemantics = 128;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_AH_READ_WRITE: OptixPayloadSemantics = 192;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_IS_NONE: OptixPayloadSemantics = 0;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_IS_READ: OptixPayloadSemantics = 256;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_IS_WRITE: OptixPayloadSemantics = 512;
pub const OptixPayloadSemantics_OPTIX_PAYLOAD_SEMANTICS_IS_READ_WRITE: OptixPayloadSemantics = 768;
pub type OptixPayloadSemantics = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixPayloadType {
    pub numPayloadValues: ::std::os::raw::c_uint,
    pub payloadSemantics: *const ::std::os::raw::c_uint,
}
impl Default for OptixPayloadType {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixModuleCompileOptions {
    pub maxRegisterCount: ::std::os::raw::c_int,
    pub optLevel: OptixCompileOptimizationLevel::Type,
    pub debugLevel: OptixCompileDebugLevel::Type,
    pub boundValues: *const OptixModuleCompileBoundValueEntry,
    pub numBoundValues: ::std::os::raw::c_uint,
    pub numPayloadTypes: ::std::os::raw::c_uint,
    pub payloadTypes: *const OptixPayloadType,
}
impl Default for OptixModuleCompileOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub mod OptixProgramGroupKind {
    pub type Type = ::std::os::raw::c_int;
    pub const OPTIX_PROGRAM_GROUP_KIND_RAYGEN: Type = 9249;
    pub const OPTIX_PROGRAM_GROUP_KIND_MISS: Type = 9250;
    pub const OPTIX_PROGRAM_GROUP_KIND_EXCEPTION: Type = 9251;
    pub const OPTIX_PROGRAM_GROUP_KIND_HITGROUP: Type = 9252;
    pub const OPTIX_PROGRAM_GROUP_KIND_CALLABLES: Type = 9253;
}
pub const OptixProgramGroupFlags_OPTIX_PROGRAM_GROUP_FLAGS_NONE: OptixProgramGroupFlags = 0;
pub type OptixProgramGroupFlags = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixProgramGroupSingleModule {
    pub module: OptixModule,
    pub entryFunctionName: *const ::std::os::raw::c_char,
}
impl Default for OptixProgramGroupSingleModule {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixProgramGroupHitgroup {
    pub moduleCH: OptixModule,
    pub entryFunctionNameCH: *const ::std::os::raw::c_char,
    pub moduleAH: OptixModule,
    pub entryFunctionNameAH: *const ::std::os::raw::c_char,
    pub moduleIS: OptixModule,
    pub entryFunctionNameIS: *const ::std::os::raw::c_char,
}
impl Default for OptixProgramGroupHitgroup {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixProgramGroupCallables {
    pub moduleDC: OptixModule,
    pub entryFunctionNameDC: *const ::std::os::raw::c_char,
    pub moduleCC: OptixModule,
    pub entryFunctionNameCC: *const ::std::os::raw::c_char,
}
impl Default for OptixProgramGroupCallables {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct OptixProgramGroupDesc {
    pub kind: OptixProgramGroupKind::Type,
    pub flags: ::std::os::raw::c_uint,
    pub __bindgen_anon_1: OptixProgramGroupDesc__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union OptixProgramGroupDesc__bindgen_ty_1 {
    pub raygen: OptixProgramGroupSingleModule,
    pub miss: OptixProgramGroupSingleModule,
    pub exception: OptixProgramGroupSingleModule,
    pub callables: OptixProgramGroupCallables,
    pub hitgroup: OptixProgramGroupHitgroup,
}
impl Default for OptixProgramGroupDesc__bindgen_ty_1 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
impl Default for OptixProgramGroupDesc {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixProgramGroupOptions {
    pub payloadType: *const OptixPayloadType,
}
impl Default for OptixProgramGroupOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub const OptixExceptionCodes_OPTIX_EXCEPTION_CODE_STACK_OVERFLOW: OptixExceptionCodes = -1;
pub const OptixExceptionCodes_OPTIX_EXCEPTION_CODE_TRACE_DEPTH_EXCEEDED: OptixExceptionCodes = -2;
pub type OptixExceptionCodes = ::std::os::raw::c_int;
pub mod OptixExceptionFlags {
    pub type Type = ::std::os::raw::c_int;
    pub const OPTIX_EXCEPTION_FLAG_NONE: Type = 0;
    pub const OPTIX_EXCEPTION_FLAG_STACK_OVERFLOW: Type = 1;
    pub const OPTIX_EXCEPTION_FLAG_TRACE_DEPTH: Type = 2;
    pub const OPTIX_EXCEPTION_FLAG_USER: Type = 4;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixPipelineCompileOptions {
    pub usesMotionBlur: ::std::os::raw::c_int,
    pub traversableGraphFlags: ::std::os::raw::c_uint,
    pub numPayloadValues: ::std::os::raw::c_int,
    pub numAttributeValues: ::std::os::raw::c_int,
    pub exceptionFlags: ::std::os::raw::c_uint,
    pub pipelineLaunchParamsVariableName: *const ::std::os::raw::c_char,
    pub usesPrimitiveTypeFlags: ::std::os::raw::c_uint,
    pub allowOpacityMicromaps: ::std::os::raw::c_int,
}
impl Default for OptixPipelineCompileOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixPipelineLinkOptions {
    pub maxTraceDepth: ::std::os::raw::c_uint,
}
#[repr(C)]
pub struct OptixShaderBindingTable {
    pub raygenRecord: CUdeviceptr,
    pub exceptionRecord: CUdeviceptr,
    pub missRecordBase: CUdeviceptr,
    pub missRecordStrideInBytes: ::std::os::raw::c_uint,
    pub missRecordCount: ::std::os::raw::c_uint,
    pub hitgroupRecordBase: CUdeviceptr,
    pub hitgroupRecordStrideInBytes: ::std::os::raw::c_uint,
    pub hitgroupRecordCount: ::std::os::raw::c_uint,
    pub callablesRecordBase: CUdeviceptr,
    pub callablesRecordStrideInBytes: ::std::os::raw::c_uint,
    pub callablesRecordCount: ::std::os::raw::c_uint,
}
impl Default for OptixShaderBindingTable {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixStackSizes {
    pub cssRG: ::std::os::raw::c_uint,
    pub cssMS: ::std::os::raw::c_uint,
    pub cssCH: ::std::os::raw::c_uint,
    pub cssAH: ::std::os::raw::c_uint,
    pub cssIS: ::std::os::raw::c_uint,
    pub cssCC: ::std::os::raw::c_uint,
    pub dssDC: ::std::os::raw::c_uint,
}
pub const OptixQueryFunctionTableOptions_OPTIX_QUERY_FUNCTION_TABLE_OPTION_DUMMY:
    OptixQueryFunctionTableOptions = 0;
pub type OptixQueryFunctionTableOptions = ::std::os::raw::c_int;
pub type OptixQueryFunctionTable_t = ::std::option::Option<
    unsafe extern "C" fn(
        abiId: ::std::os::raw::c_int,
        numOptions: ::std::os::raw::c_uint,
        arg1: *mut OptixQueryFunctionTableOptions,
        arg2: *mut *const ::std::os::raw::c_void,
        functionTable: *mut ::std::os::raw::c_void,
        sizeOfTable: size_t,
    ) -> OptixResult,
>;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct OptixBuiltinISOptions {
    pub builtinISModuleType: OptixPrimitiveType,
    pub usesMotionBlur: ::std::os::raw::c_int,
    pub buildFlags: ::std::os::raw::c_uint,
    pub curveEndcapFlags: ::std::os::raw::c_uint,
}
impl Default for OptixBuiltinISOptions {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
extern "C" {
    pub fn optixGetErrorName(result: OptixResult) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn optixGetErrorString(result: OptixResult) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn optixDeviceContextCreate(
        fromContext: CUcontext,
        options: *const OptixDeviceContextOptions,
        context: *mut OptixDeviceContext,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextDestroy(context: OptixDeviceContext) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextGetProperty(
        context: OptixDeviceContext,
        property: OptixDeviceProperty::Type,
        value: *mut ::std::os::raw::c_void,
        sizeInBytes: size_t,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextSetLogCallback(
        context: OptixDeviceContext,
        callbackFunction: OptixLogCallback,
        callbackData: *mut ::std::os::raw::c_void,
        callbackLevel: ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextSetCacheEnabled(
        context: OptixDeviceContext,
        enabled: ::std::os::raw::c_int,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextSetCacheLocation(
        context: OptixDeviceContext,
        location: *const ::std::os::raw::c_char,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextSetCacheDatabaseSizes(
        context: OptixDeviceContext,
        lowWaterMark: size_t,
        highWaterMark: size_t,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextGetCacheEnabled(
        context: OptixDeviceContext,
        enabled: *mut ::std::os::raw::c_int,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextGetCacheLocation(
        context: OptixDeviceContext,
        location: *mut ::std::os::raw::c_char,
        locationSize: size_t,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDeviceContextGetCacheDatabaseSizes(
        context: OptixDeviceContext,
        lowWaterMark: *mut size_t,
        highWaterMark: *mut size_t,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixPipelineCreate(
        context: OptixDeviceContext,
        pipelineCompileOptions: *const OptixPipelineCompileOptions,
        pipelineLinkOptions: *const OptixPipelineLinkOptions,
        programGroups: *const OptixProgramGroup,
        numProgramGroups: ::std::os::raw::c_uint,
        logString: *mut ::std::os::raw::c_char,
        logStringSize: *mut size_t,
        pipeline: *mut OptixPipeline,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixPipelineDestroy(pipeline: OptixPipeline) -> OptixResult;
}
extern "C" {
    pub fn optixPipelineSetStackSize(
        pipeline: OptixPipeline,
        directCallableStackSizeFromTraversal: ::std::os::raw::c_uint,
        directCallableStackSizeFromState: ::std::os::raw::c_uint,
        continuationStackSize: ::std::os::raw::c_uint,
        maxTraversableGraphDepth: ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixModuleCreate(
        context: OptixDeviceContext,
        moduleCompileOptions: *const OptixModuleCompileOptions,
        pipelineCompileOptions: *const OptixPipelineCompileOptions,
        input: *const ::std::os::raw::c_char,
        inputSize: size_t,
        logString: *mut ::std::os::raw::c_char,
        logStringSize: *mut size_t,
        module: *mut OptixModule,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixModuleCreateWithTasks(
        context: OptixDeviceContext,
        moduleCompileOptions: *const OptixModuleCompileOptions,
        pipelineCompileOptions: *const OptixPipelineCompileOptions,
        input: *const ::std::os::raw::c_char,
        inputSize: size_t,
        logString: *mut ::std::os::raw::c_char,
        logStringSize: *mut size_t,
        module: *mut OptixModule,
        firstTask: *mut OptixTask,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixModuleGetCompilationState(
        module: OptixModule,
        state: *mut OptixModuleCompileState,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixModuleDestroy(module: OptixModule) -> OptixResult;
}
extern "C" {
    pub fn optixBuiltinISModuleGet(
        context: OptixDeviceContext,
        moduleCompileOptions: *const OptixModuleCompileOptions,
        pipelineCompileOptions: *const OptixPipelineCompileOptions,
        builtinISOptions: *const OptixBuiltinISOptions,
        builtinModule: *mut OptixModule,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixTaskExecute(
        task: OptixTask,
        additionalTasks: *mut OptixTask,
        maxNumAdditionalTasks: ::std::os::raw::c_uint,
        numAdditionalTasksCreated: *mut ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixProgramGroupGetStackSize(
        programGroup: OptixProgramGroup,
        stackSizes: *mut OptixStackSizes,
        pipeline: OptixPipeline,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixProgramGroupCreate(
        context: OptixDeviceContext,
        programDescriptions: *const OptixProgramGroupDesc,
        numProgramGroups: ::std::os::raw::c_uint,
        options: *const OptixProgramGroupOptions,
        logString: *mut ::std::os::raw::c_char,
        logStringSize: *mut size_t,
        programGroups: *mut OptixProgramGroup,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixProgramGroupDestroy(programGroup: OptixProgramGroup) -> OptixResult;
}
extern "C" {
    pub fn optixLaunch(
        pipeline: OptixPipeline,
        stream: CUstream,
        pipelineParams: CUdeviceptr,
        pipelineParamsSize: size_t,
        sbt: *const OptixShaderBindingTable,
        width: ::std::os::raw::c_uint,
        height: ::std::os::raw::c_uint,
        depth: ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixSbtRecordPackHeader(
        programGroup: OptixProgramGroup,
        sbtRecordHeaderHostPointer: *mut ::std::os::raw::c_void,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelComputeMemoryUsage(
        context: OptixDeviceContext,
        accelOptions: *const OptixAccelBuildOptions,
        buildInputs: *const OptixBuildInput,
        numBuildInputs: ::std::os::raw::c_uint,
        bufferSizes: *mut OptixAccelBufferSizes,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelBuild(
        context: OptixDeviceContext,
        stream: CUstream,
        accelOptions: *const OptixAccelBuildOptions,
        buildInputs: *const OptixBuildInput,
        numBuildInputs: ::std::os::raw::c_uint,
        tempBuffer: CUdeviceptr,
        tempBufferSizeInBytes: size_t,
        outputBuffer: CUdeviceptr,
        outputBufferSizeInBytes: size_t,
        outputHandle: *mut OptixTraversableHandle,
        emittedProperties: *const OptixAccelEmitDesc,
        numEmittedProperties: ::std::os::raw::c_uint,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelGetRelocationInfo(
        context: OptixDeviceContext,
        handle: OptixTraversableHandle,
        info: *mut OptixRelocationInfo,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixCheckRelocationCompatibility(
        context: OptixDeviceContext,
        info: *const OptixRelocationInfo,
        compatible: *mut ::std::os::raw::c_int,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelRelocate(
        context: OptixDeviceContext,
        stream: CUstream,
        info: *const OptixRelocationInfo,
        relocateInputs: *const OptixRelocateInput,
        numRelocateInputs: size_t,
        targetAccel: CUdeviceptr,
        targetAccelSizeInBytes: size_t,
        targetHandle: *mut OptixTraversableHandle,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelCompact(
        context: OptixDeviceContext,
        stream: CUstream,
        inputHandle: OptixTraversableHandle,
        outputBuffer: CUdeviceptr,
        outputBufferSizeInBytes: size_t,
        outputHandle: *mut OptixTraversableHandle,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixAccelEmitProperty(
        context: OptixDeviceContext,
        stream: CUstream,
        handle: OptixTraversableHandle,
        emittedProperty: *const OptixAccelEmitDesc,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixConvertPointerToTraversableHandle(
        onDevice: OptixDeviceContext,
        pointer: CUdeviceptr,
        traversableType: OptixTraversableType,
        traversableHandle: *mut OptixTraversableHandle,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixOpacityMicromapArrayComputeMemoryUsage(
        context: OptixDeviceContext,
        buildInput: *const OptixOpacityMicromapArrayBuildInput,
        bufferSizes: *mut OptixMicromapBufferSizes,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixOpacityMicromapArrayBuild(
        context: OptixDeviceContext,
        stream: CUstream,
        buildInput: *const OptixOpacityMicromapArrayBuildInput,
        buffers: *const OptixMicromapBuffers,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixOpacityMicromapArrayGetRelocationInfo(
        context: OptixDeviceContext,
        opacityMicromapArray: CUdeviceptr,
        info: *mut OptixRelocationInfo,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixOpacityMicromapArrayRelocate(
        context: OptixDeviceContext,
        stream: CUstream,
        info: *const OptixRelocationInfo,
        targetOpacityMicromapArray: CUdeviceptr,
        targetOpacityMicromapArraySizeInBytes: size_t,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDisplacementMicromapArrayComputeMemoryUsage(
        context: OptixDeviceContext,
        buildInput: *const OptixDisplacementMicromapArrayBuildInput,
        bufferSizes: *mut OptixMicromapBufferSizes,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDisplacementMicromapArrayBuild(
        context: OptixDeviceContext,
        stream: CUstream,
        buildInput: *const OptixDisplacementMicromapArrayBuildInput,
        buffers: *const OptixMicromapBuffers,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserCreate(
        context: OptixDeviceContext,
        modelKind: OptixDenoiserModelKind::Type,
        options: *const OptixDenoiserOptions,
        denoiser: *mut OptixDenoiser,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserCreateWithUserModel(
        context: OptixDeviceContext,
        userData: *const ::std::os::raw::c_void,
        userDataSizeInBytes: size_t,
        denoiser: *mut OptixDenoiser,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserDestroy(denoiser: OptixDenoiser) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserComputeMemoryResources(
        denoiser: OptixDenoiser,
        outputWidth: ::std::os::raw::c_uint,
        outputHeight: ::std::os::raw::c_uint,
        returnSizes: *mut OptixDenoiserSizes,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserSetup(
        denoiser: OptixDenoiser,
        stream: CUstream,
        inputWidth: ::std::os::raw::c_uint,
        inputHeight: ::std::os::raw::c_uint,
        denoiserState: CUdeviceptr,
        denoiserStateSizeInBytes: size_t,
        scratch: CUdeviceptr,
        scratchSizeInBytes: size_t,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserInvoke(
        denoiser: OptixDenoiser,
        stream: CUstream,
        params: *const OptixDenoiserParams,
        denoiserState: CUdeviceptr,
        denoiserStateSizeInBytes: size_t,
        guideLayer: *const OptixDenoiserGuideLayer,
        layers: *const OptixDenoiserLayer,
        numLayers: ::std::os::raw::c_uint,
        inputOffsetX: ::std::os::raw::c_uint,
        inputOffsetY: ::std::os::raw::c_uint,
        scratch: CUdeviceptr,
        scratchSizeInBytes: size_t,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserComputeIntensity(
        denoiser: OptixDenoiser,
        stream: CUstream,
        inputImage: *const OptixImage2D,
        outputIntensity: CUdeviceptr,
        scratch: CUdeviceptr,
        scratchSizeInBytes: size_t,
    ) -> OptixResult;
}
extern "C" {
    pub fn optixDenoiserComputeAverageColor(
        denoiser: OptixDenoiser,
        stream: CUstream,
        inputImage: *const OptixImage2D,
        outputAverageColor: CUdeviceptr,
        scratch: CUdeviceptr,
        scratchSizeInBytes: size_t,
    ) -> OptixResult;
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialEq)]
pub struct OptixFunctionTable {
    pub optixGetErrorName: ::std::option::Option<
        unsafe extern "C" fn(result: OptixResult) -> *const ::std::os::raw::c_char,
    >,
    pub optixGetErrorString: ::std::option::Option<
        unsafe extern "C" fn(result: OptixResult) -> *const ::std::os::raw::c_char,
    >,
    pub optixDeviceContextCreate: ::std::option::Option<
        unsafe extern "C" fn(
            fromContext: CUcontext,
            options: *const OptixDeviceContextOptions,
            context: *mut OptixDeviceContext,
        ) -> OptixResult,
    >,
    pub optixDeviceContextDestroy:
        ::std::option::Option<unsafe extern "C" fn(context: OptixDeviceContext) -> OptixResult>,
    pub optixDeviceContextGetProperty: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            property: OptixDeviceProperty::Type,
            value: *mut ::std::os::raw::c_void,
            sizeInBytes: size_t,
        ) -> OptixResult,
    >,
    pub optixDeviceContextSetLogCallback: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            callbackFunction: OptixLogCallback,
            callbackData: *mut ::std::os::raw::c_void,
            callbackLevel: ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixDeviceContextSetCacheEnabled: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            enabled: ::std::os::raw::c_int,
        ) -> OptixResult,
    >,
    pub optixDeviceContextSetCacheLocation: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            location: *const ::std::os::raw::c_char,
        ) -> OptixResult,
    >,
    pub optixDeviceContextSetCacheDatabaseSizes: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            lowWaterMark: size_t,
            highWaterMark: size_t,
        ) -> OptixResult,
    >,
    pub optixDeviceContextGetCacheEnabled: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            enabled: *mut ::std::os::raw::c_int,
        ) -> OptixResult,
    >,
    pub optixDeviceContextGetCacheLocation: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            location: *mut ::std::os::raw::c_char,
            locationSize: size_t,
        ) -> OptixResult,
    >,
    pub optixDeviceContextGetCacheDatabaseSizes: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            lowWaterMark: *mut size_t,
            highWaterMark: *mut size_t,
        ) -> OptixResult,
    >,
    pub optixModuleCreate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            moduleCompileOptions: *const OptixModuleCompileOptions,
            pipelineCompileOptions: *const OptixPipelineCompileOptions,
            input: *const ::std::os::raw::c_char,
            inputSize: size_t,
            logString: *mut ::std::os::raw::c_char,
            logStringSize: *mut size_t,
            module: *mut OptixModule,
        ) -> OptixResult,
    >,
    pub optixModuleCreateWithTasks: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            moduleCompileOptions: *const OptixModuleCompileOptions,
            pipelineCompileOptions: *const OptixPipelineCompileOptions,
            input: *const ::std::os::raw::c_char,
            inputSize: size_t,
            logString: *mut ::std::os::raw::c_char,
            logStringSize: *mut size_t,
            module: *mut OptixModule,
            firstTask: *mut OptixTask,
        ) -> OptixResult,
    >,
    pub optixModuleGetCompilationState: ::std::option::Option<
        unsafe extern "C" fn(
            module: OptixModule,
            state: *mut OptixModuleCompileState,
        ) -> OptixResult,
    >,
    pub optixModuleDestroy:
        ::std::option::Option<unsafe extern "C" fn(module: OptixModule) -> OptixResult>,
    pub optixBuiltinISModuleGet: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            moduleCompileOptions: *const OptixModuleCompileOptions,
            pipelineCompileOptions: *const OptixPipelineCompileOptions,
            builtinISOptions: *const OptixBuiltinISOptions,
            builtinModule: *mut OptixModule,
        ) -> OptixResult,
    >,
    pub optixTaskExecute: ::std::option::Option<
        unsafe extern "C" fn(
            task: OptixTask,
            additionalTasks: *mut OptixTask,
            maxNumAdditionalTasks: ::std::os::raw::c_uint,
            numAdditionalTasksCreated: *mut ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixProgramGroupCreate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            programDescriptions: *const OptixProgramGroupDesc,
            numProgramGroups: ::std::os::raw::c_uint,
            options: *const OptixProgramGroupOptions,
            logString: *mut ::std::os::raw::c_char,
            logStringSize: *mut size_t,
            programGroups: *mut OptixProgramGroup,
        ) -> OptixResult,
    >,
    pub optixProgramGroupDestroy:
        ::std::option::Option<unsafe extern "C" fn(programGroup: OptixProgramGroup) -> OptixResult>,
    pub optixProgramGroupGetStackSize: ::std::option::Option<
        unsafe extern "C" fn(
            programGroup: OptixProgramGroup,
            stackSizes: *mut OptixStackSizes,
            pipeline: OptixPipeline,
        ) -> OptixResult,
    >,
    pub optixPipelineCreate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            pipelineCompileOptions: *const OptixPipelineCompileOptions,
            pipelineLinkOptions: *const OptixPipelineLinkOptions,
            programGroups: *const OptixProgramGroup,
            numProgramGroups: ::std::os::raw::c_uint,
            logString: *mut ::std::os::raw::c_char,
            logStringSize: *mut size_t,
            pipeline: *mut OptixPipeline,
        ) -> OptixResult,
    >,
    pub optixPipelineDestroy:
        ::std::option::Option<unsafe extern "C" fn(pipeline: OptixPipeline) -> OptixResult>,
    pub optixPipelineSetStackSize: ::std::option::Option<
        unsafe extern "C" fn(
            pipeline: OptixPipeline,
            directCallableStackSizeFromTraversal: ::std::os::raw::c_uint,
            directCallableStackSizeFromState: ::std::os::raw::c_uint,
            continuationStackSize: ::std::os::raw::c_uint,
            maxTraversableGraphDepth: ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixAccelComputeMemoryUsage: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            accelOptions: *const OptixAccelBuildOptions,
            buildInputs: *const OptixBuildInput,
            numBuildInputs: ::std::os::raw::c_uint,
            bufferSizes: *mut OptixAccelBufferSizes,
        ) -> OptixResult,
    >,
    pub optixAccelBuild: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            accelOptions: *const OptixAccelBuildOptions,
            buildInputs: *const OptixBuildInput,
            numBuildInputs: ::std::os::raw::c_uint,
            tempBuffer: CUdeviceptr,
            tempBufferSizeInBytes: size_t,
            outputBuffer: CUdeviceptr,
            outputBufferSizeInBytes: size_t,
            outputHandle: *mut OptixTraversableHandle,
            emittedProperties: *const OptixAccelEmitDesc,
            numEmittedProperties: ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixAccelGetRelocationInfo: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            handle: OptixTraversableHandle,
            info: *mut OptixRelocationInfo,
        ) -> OptixResult,
    >,
    pub optixCheckRelocationCompatibility: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            info: *const OptixRelocationInfo,
            compatible: *mut ::std::os::raw::c_int,
        ) -> OptixResult,
    >,
    pub optixAccelRelocate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            info: *const OptixRelocationInfo,
            relocateInputs: *const OptixRelocateInput,
            numRelocateInputs: size_t,
            targetAccel: CUdeviceptr,
            targetAccelSizeInBytes: size_t,
            targetHandle: *mut OptixTraversableHandle,
        ) -> OptixResult,
    >,
    pub optixAccelCompact: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            inputHandle: OptixTraversableHandle,
            outputBuffer: CUdeviceptr,
            outputBufferSizeInBytes: size_t,
            outputHandle: *mut OptixTraversableHandle,
        ) -> OptixResult,
    >,
    pub optixAccelEmitProperty: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            handle: OptixTraversableHandle,
            emittedProperty: *const OptixAccelEmitDesc,
        ) -> OptixResult,
    >,
    pub optixConvertPointerToTraversableHandle: ::std::option::Option<
        unsafe extern "C" fn(
            onDevice: OptixDeviceContext,
            pointer: CUdeviceptr,
            traversableType: OptixTraversableType,
            traversableHandle: *mut OptixTraversableHandle,
        ) -> OptixResult,
    >,
    pub optixOpacityMicromapArrayComputeMemoryUsage: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            buildInput: *const OptixOpacityMicromapArrayBuildInput,
            bufferSizes: *mut OptixMicromapBufferSizes,
        ) -> OptixResult,
    >,
    pub optixOpacityMicromapArrayBuild: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            buildInput: *const OptixOpacityMicromapArrayBuildInput,
            buffers: *const OptixMicromapBuffers,
        ) -> OptixResult,
    >,
    pub optixOpacityMicromapArrayGetRelocationInfo: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            opacityMicromapArray: CUdeviceptr,
            info: *mut OptixRelocationInfo,
        ) -> OptixResult,
    >,
    pub optixOpacityMicromapArrayRelocate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            info: *const OptixRelocationInfo,
            targetOpacityMicromapArray: CUdeviceptr,
            targetOpacityMicromapArraySizeInBytes: size_t,
        ) -> OptixResult,
    >,
    pub optixDisplacementMicromapArrayComputeMemoryUsage: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            buildInput: *const OptixDisplacementMicromapArrayBuildInput,
            bufferSizes: *mut OptixMicromapBufferSizes,
        ) -> OptixResult,
    >,
    pub optixDisplacementMicromapArrayBuild: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            stream: CUstream,
            buildInput: *const OptixDisplacementMicromapArrayBuildInput,
            buffers: *const OptixMicromapBuffers,
        ) -> OptixResult,
    >,
    pub optixSbtRecordPackHeader: ::std::option::Option<
        unsafe extern "C" fn(
            programGroup: OptixProgramGroup,
            sbtRecordHeaderHostPointer: *mut ::std::os::raw::c_void,
        ) -> OptixResult,
    >,
    pub optixLaunch: ::std::option::Option<
        unsafe extern "C" fn(
            pipeline: OptixPipeline,
            stream: CUstream,
            pipelineParams: CUdeviceptr,
            pipelineParamsSize: size_t,
            sbt: *const OptixShaderBindingTable,
            width: ::std::os::raw::c_uint,
            height: ::std::os::raw::c_uint,
            depth: ::std::os::raw::c_uint,
        ) -> OptixResult,
    >,
    pub optixPlaceholder001:
        ::std::option::Option<unsafe extern "C" fn(context: OptixDeviceContext) -> OptixResult>,
    pub optixPlaceholder002:
        ::std::option::Option<unsafe extern "C" fn(context: OptixDeviceContext) -> OptixResult>,
    pub optixDenoiserCreate: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            modelKind: OptixDenoiserModelKind::Type,
            options: *const OptixDenoiserOptions,
            returnHandle: *mut OptixDenoiser,
        ) -> OptixResult,
    >,
    pub optixDenoiserDestroy:
        ::std::option::Option<unsafe extern "C" fn(handle: OptixDenoiser) -> OptixResult>,
    pub optixDenoiserComputeMemoryResources: ::std::option::Option<
        unsafe extern "C" fn(
            handle: OptixDenoiser,
            maximumInputWidth: ::std::os::raw::c_uint,
            maximumInputHeight: ::std::os::raw::c_uint,
            returnSizes: *mut OptixDenoiserSizes,
        ) -> OptixResult,
    >,
    pub optixDenoiserSetup: ::std::option::Option<
        unsafe extern "C" fn(
            denoiser: OptixDenoiser,
            stream: CUstream,
            inputWidth: ::std::os::raw::c_uint,
            inputHeight: ::std::os::raw::c_uint,
            state: CUdeviceptr,
            stateSizeInBytes: size_t,
            scratch: CUdeviceptr,
            scratchSizeInBytes: size_t,
        ) -> OptixResult,
    >,
    pub optixDenoiserInvoke: ::std::option::Option<
        unsafe extern "C" fn(
            denoiser: OptixDenoiser,
            stream: CUstream,
            params: *const OptixDenoiserParams,
            denoiserState: CUdeviceptr,
            denoiserStateSizeInBytes: size_t,
            guideLayer: *const OptixDenoiserGuideLayer,
            layers: *const OptixDenoiserLayer,
            numLayers: ::std::os::raw::c_uint,
            inputOffsetX: ::std::os::raw::c_uint,
            inputOffsetY: ::std::os::raw::c_uint,
            scratch: CUdeviceptr,
            scratchSizeInBytes: size_t,
        ) -> OptixResult,
    >,
    pub optixDenoiserComputeIntensity: ::std::option::Option<
        unsafe extern "C" fn(
            handle: OptixDenoiser,
            stream: CUstream,
            inputImage: *const OptixImage2D,
            outputIntensity: CUdeviceptr,
            scratch: CUdeviceptr,
            scratchSizeInBytes: size_t,
        ) -> OptixResult,
    >,
    pub optixDenoiserComputeAverageColor: ::std::option::Option<
        unsafe extern "C" fn(
            handle: OptixDenoiser,
            stream: CUstream,
            inputImage: *const OptixImage2D,
            outputAverageColor: CUdeviceptr,
            scratch: CUdeviceptr,
            scratchSizeInBytes: size_t,
        ) -> OptixResult,
    >,
    pub optixDenoiserCreateWithUserModel: ::std::option::Option<
        unsafe extern "C" fn(
            context: OptixDeviceContext,
            data: *const ::std::os::raw::c_void,
            dataSizeInBytes: size_t,
            returnHandle: *mut OptixDenoiser,
        ) -> OptixResult,
    >,
}
pub const OptixSbtRecordHeaderSize: size_t = 32;
pub const OptixSbtRecordAlignment: size_t = 16;
pub const OptixAccelBufferByteAlignment: size_t = 128;
pub const OptixInstanceByteAlignment: size_t = 16;
pub const OptixAabbBufferByteAlignment: size_t = 8;
pub const OptixGeometryTransformByteAlignment: size_t = 16;
pub const OptixTransformByteAlignment: size_t = 64;
pub const OptixVersion: size_t = 80100;
pub const OptixBuildInputSize: size_t = 1032;
pub const OptixShaderBindingTableSize: size_t = 64;
#[repr(i32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum OptixGeometryFlags {
    None = 0,
    DisableAnyHit = 1,
    RequireSingleAnyHitCall = 2,
}
